type Query {
    allLink(filterNeedle: String, skip: Int, take: Int): [Link!]! # Retourne tous les "Links" en SQLite
    uniqueLink(id: Int!): Link! # Retourne tous les "Links" en SQLite via son id
    allComment: [Comment!]! # Retourne tous les "Comment" en SQLite
    uniqueComment(id: Int!): Comment! # Retourne un "Comment" en SQLite via son id
}

type Mutation {
    postLink(url: String!, description: String!): Link! # Ajoute un Link en SQLite en lui fournissant une url et une description
    postCommentOnLink(linkId: ID!, body: String!): Comment! # Ajoute un Comment Ã  un Link en SQLite en lui fournissant un body
}

type Link {
    id: ID!
    description: String!
    url: String!
    comments: [Comment!]! # Permet de retourner un Link avec un tableau de ses commentaires
}

type Comment {
  id: ID!
  body: String!
  linkId: Int!
  links: [Link!]! # Permet de retourner les commentaires d'un Link
}

